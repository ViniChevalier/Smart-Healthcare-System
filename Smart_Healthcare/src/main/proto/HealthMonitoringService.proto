syntax = "proto3";

option java_multiple_files = true;
option java_package = "generated.grpc.HealthMonitoringService";
option java_outer_classname = "HealthMonitoringServiceImpl";

package HealthMonitoringService;

service HealthMonitoringService {
    // Streams real-time health data from IoT devices. (Client Streaming RPC)
    rpc SendHealthData (stream HealthDataRequest) returns (HealthDataResponse);

    // Sends emergency alerts if critical health conditions are detected. (Bidirectional Streaming RPC)
    rpc AlertEmergency (stream EmergencyAlertRequest) returns (stream EmergencyAlertResponse);
}

// Message for streaming health data from IoT devices.
message HealthDataRequest {
    string patient_id = 1;  // Patient's unique identifier
    int32 heart_rate = 2;   // Heart rate measurement
    float temperature = 3;  // Body temperature measurement
    string deviceId = 4;    // Device's ID
}

// Response message for health data processing.
message HealthDataResponse {
    bool success = 1;       // Indicates if the data was received successfully
    string message = 2;     // Confirmation or error details
}

// Message for emergency alert request.
message EmergencyAlertRequest {
    string patient_id = 1;      // Patient's unique identifier
    string alert_type = 2;      // Example: "Heart Rate Spike", "High Temperature"
    string alertMessage = 3;    // Optional message describing the emergency
}

// Response message for emergency alerts.
message EmergencyAlertResponse {
    bool acknowledged = 1;          // Indicates if the alert was received
    string response_message = 2;    // Details about the response or next steps
    string confirmation = 3;        // Optional confirmation string
}