/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package distsys.smart_healthcare;

import generated.grpc.HealthMonitoringService.*;
import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import io.grpc.stub.StreamObserver;

import javax.swing.*;
import java.awt.*;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author vinicius
 */
public class HealthMonitoringClient extends javax.swing.JFrame {

    private ManagedChannel channel;
    private HealthMonitoringServiceGrpc.HealthMonitoringServiceStub asyncStub;
    private StreamObserver<HealthDataRequest> healthDataStream;
    private StreamObserver<EmergencyAlertRequest> emergencyStream;

    /**
     * Creates new form HealthMonitoringClient
     */
    public HealthMonitoringClient() {
        initComponents();
        initGrpcConnection();
        setupListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        healthDataPanel = new javax.swing.JPanel();
        txtPatientId = new javax.swing.JTextField();
        txtHeartRate = new javax.swing.JTextField();
        txtTemperature = new javax.swing.JTextField();
        txtDeviceId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSendHealthData = new javax.swing.JButton();
        emergencyAlertPanel = new javax.swing.JPanel();
        txtAlertPatientId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        comboAlertType = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAlertMessage = new javax.swing.JTextArea();
        btnSendAlert = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEmergencyResponse = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtDeviceId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeviceIdActionPerformed(evt);
            }
        });

        jLabel1.setText("Patient ID");

        jLabel2.setText("Heart Rate");

        jLabel3.setText("Temperature");

        jLabel4.setText("Device ID");

        btnSendHealthData.setText("Send Health Data");
        btnSendHealthData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendHealthDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout healthDataPanelLayout = new javax.swing.GroupLayout(healthDataPanel);
        healthDataPanel.setLayout(healthDataPanelLayout);
        healthDataPanelLayout.setHorizontalGroup(
            healthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, healthDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(healthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(healthDataPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSendHealthData, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(healthDataPanelLayout.createSequentialGroup()
                        .addGroup(healthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(healthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHeartRate)
                            .addComponent(txtPatientId)
                            .addComponent(txtTemperature)
                            .addComponent(txtDeviceId))))
                .addContainerGap())
        );
        healthDataPanelLayout.setVerticalGroup(
            healthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(healthDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(healthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(healthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(healthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(healthDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDeviceId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSendHealthData))
        );

        jLabel5.setText("Alert Patient ID");

        comboAlertType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtAlertMessage.setColumns(20);
        txtAlertMessage.setRows(5);
        jScrollPane1.setViewportView(txtAlertMessage);

        btnSendAlert.setText("Send Alert");

        txtEmergencyResponse.setEditable(false);
        txtEmergencyResponse.setColumns(20);
        txtEmergencyResponse.setRows(5);
        jScrollPane2.setViewportView(txtEmergencyResponse);

        jLabel6.setText("Alert Type");

        javax.swing.GroupLayout emergencyAlertPanelLayout = new javax.swing.GroupLayout(emergencyAlertPanel);
        emergencyAlertPanel.setLayout(emergencyAlertPanelLayout);
        emergencyAlertPanelLayout.setHorizontalGroup(
            emergencyAlertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emergencyAlertPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(emergencyAlertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addGroup(emergencyAlertPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emergencyAlertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAlertPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboAlertType, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, emergencyAlertPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSendAlert))
        );
        emergencyAlertPanelLayout.setVerticalGroup(
            emergencyAlertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emergencyAlertPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(emergencyAlertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAlertPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emergencyAlertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboAlertType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSendAlert)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emergencyAlertPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(healthDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(healthDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emergencyAlertPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDeviceIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeviceIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeviceIdActionPerformed

    private void btnSendHealthDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendHealthDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSendHealthDataActionPerformed

    private void initGrpcConnection() {
        channel = ManagedChannelBuilder.forAddress("localhost", 50051)
                .usePlaintext()
                .build();
        asyncStub = HealthMonitoringServiceGrpc.newStub(channel);

        // Start health data stream
        healthDataStream = asyncStub.sendHealthData(new StreamObserver<HealthDataResponse>() {
            @Override
            public void onNext(HealthDataResponse value) {
                JOptionPane.showMessageDialog(null, "Server Response: " + value.getMessage());
            }

            @Override
            public void onError(Throwable t) {
                JOptionPane.showMessageDialog(null, "Error: " + t.getMessage());
            }

            @Override
            public void onCompleted() {
                System.out.println("Health data stream completed.");
            }
        });

        // Start emergency alert stream
        emergencyStream = asyncStub.alertEmergency(new StreamObserver<EmergencyAlertResponse>() {
            @Override
            public void onNext(EmergencyAlertResponse response) {
                txtEmergencyResponse.append("✔ " + response.getConfirmation() + "\n");
            }

            @Override
            public void onError(Throwable t) {
                txtEmergencyResponse.append("❌ Error: " + t.getMessage() + "\n");
            }

            @Override
            public void onCompleted() {
                txtEmergencyResponse.append("🔔 Emergency stream closed by server.\n");
            }
        });
    }

    private void setupListeners() {
        btnSendHealthData.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                sendHealthData();
            }
        });

        btnSendAlert.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                sendEmergencyAlert();
            }
        });
    }

    private void sendHealthData() {
        try {
            String patientId = txtPatientId.getText();
            float heartRate = Float.parseFloat(txtHeartRate.getText());
            float temperature = Float.parseFloat(txtTemperature.getText());
            String deviceId = txtDeviceId.getText();

            HealthDataRequest data = HealthDataRequest.newBuilder()
                    .setPatientId(patientId)
                    .setHeartRate(heartRate)
                    .setTemperature(temperature)
                    .setDeviceId(deviceId)
                    .build();

            healthDataStream.onNext(data);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Invalid input: " + ex.getMessage());
        }
    }

    private void sendEmergencyAlert() {
        try {
            String patientId = txtAlertPatientId.getText();
            String alertType = comboAlertType.getSelectedItem().toString();
            String alertMessage = txtAlertMessage.getText();

            EmergencyAlertRequest alert = EmergencyAlertRequest.newBuilder()
                    .setPatientId(patientId)
                    .setAlertType(alertType)
                    .setAlertMessage(alertMessage)
                    .build();

            emergencyStream.onNext(alert);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Failed to send alert: " + ex.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HealthMonitoringClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HealthMonitoringClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HealthMonitoringClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HealthMonitoringClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HealthMonitoringClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSendAlert;
    private javax.swing.JButton btnSendHealthData;
    private javax.swing.JComboBox<String> comboAlertType;
    private javax.swing.JPanel emergencyAlertPanel;
    private javax.swing.JPanel healthDataPanel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtAlertMessage;
    private javax.swing.JTextField txtAlertPatientId;
    private javax.swing.JTextField txtDeviceId;
    private javax.swing.JTextArea txtEmergencyResponse;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
}
